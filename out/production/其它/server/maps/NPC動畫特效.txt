搜索：

public abstract class AbstractPlayerInteraction {

    protected MapleClient c;
    protected int id, id2;
    protected MapleNPC npcob;


替換：

public abstract class AbstractPlayerInteraction {

    protected MapleClient c;
    protected int id, id2;
    protected MapleNPC npcob;
    private static final Map<Pair, MapleNPC> npcs = new WeakHashMap<>();



搜索：

    public final void removeNpc(final int npcId) {
        c.getPlayer().getMap().removeNpc(npcId);
    }

替換：

    public final void removeNpc(final int npcId) {
        c.getPlayer().getMap().removeNpc(npcId);
    }

    public void spawnNPCRequestController(int npcid, int x, int y) {
        this.spawnNPCRequestController(npcid, x, y, 0);
    }

    public void spawnNPCRequestController(int npcid, int x, int y, int f) {
        MapleNPC npc;
        npcs.remove(new Pair<>(npcid, c));
        npc = MapleLifeFactory.getNPC(npcid);
        if (npc == null) {
            return;
        }
        npc.setPosition(new Point(x, y));
        npc.setCy(y);
        npc.setRx0(x - 50);
        npc.setRx1(x + 50);
        npc.setF(f);
        npc.setFh(getMap().getFootholds().findBelow(new Point(x, y)).getId());
        npc.setCustom(true);
        npc.setObjectId(npcid);
        npcs.put(new Pair<>(npcid, c), npc);
        getClient().announce(NPCPacket.spawnNPCRequestController(npc, true));
    }

    public void showNpcSpecialEffect(int npcid, String str) {//控制已有NPC狀態
        MapleMap map = getPlayer().getMap();
        for (MapleNPC obj : map.getAllNPCs()) {
            if (obj.getId() == npcid) {
                map.broadcastMessage(NPCPacket.setNPCSpecialAction(obj.getObjectId(), str), obj.getPosition());
            }
        }
    }

    public void getNPCDirectionEffect(int npcid, String data, int value, int x, int y) {
        if (!npcs.containsKey(new Pair<>(npcid, this.c))) {
            return;
        }
        MapleNPC npc = npcs.get(new Pair<>(npcid, c));
        getClient().announce(UIPacket.getDirectionEffect(data, value, x, y, npc.getObjectId()));
    }


頁首添加

import java.util.Map;
import java.util.WeakHashMap;

import tools.Pair;


搜索：

        public static byte[] spawnNPCRequestController(MapleNPC life, boolean MiniMap) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.SPAWN_NPC_REQUEST_CONTROLLER.getValue());
            mplew.write(1);
            mplew.writeInt(life.getObjectId());
            mplew.writeInt(life.getId());
            mplew.writeShort(life.getPosition().x);
            mplew.writeShort(life.getCy());
            mplew.write(life.getF() == 1 ? 0 : 1);
            mplew.writeShort(life.getFh());
            mplew.writeShort(life.getRx0());
            mplew.writeShort(life.getRx1());
            mplew.write(MiniMap ? 1 : 0);

            return mplew.getPacket();
        }


替換：

        public static byte[] spawnNPCRequestController(MapleNPC life, boolean MiniMap) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.SPAWN_NPC_REQUEST_CONTROLLER.getValue());
            mplew.write(1);
            mplew.writeInt(life.getObjectId());
            mplew.writeInt(life.getId());
            mplew.writeShort(life.getPosition().x);
            mplew.writeShort(life.getCy());
            mplew.write(life.getF() == 1 ? 0 : 1);
            mplew.writeShort(life.getFh());
            mplew.writeShort(life.getRx0());
            mplew.writeShort(life.getRx1());
            mplew.write(MiniMap ? 1 : 0);

            return mplew.getPacket();
        }

        public static byte[] setNPCSpecialAction(final int oid, final String action) {
            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
            mplew.writeShort((int)SendPacketOpcode.NPC_SET_SPECIAL_ACTION.getValue());
            mplew.writeInt(oid);
            mplew.writeMapleAsciiString(action);
            mplew.writeInt(0);
            mplew.write(0);
            return mplew.getPacket();
        }

        public static byte[] NPCSpecialAction(final int oid, final int value, final int x, final int y) {
            final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
            mplew.writeShort((int)SendPacketOpcode.NPC_UPDATE_LIMITED_INFO.getValue());
            mplew.writeInt(oid);
            mplew.writeInt(value);
            mplew.writeInt(x);
            mplew.writeInt(y);
            return mplew.getPacket();
        }


搜索：

    REMOVE_NPC,
    SPAWN_NPC_REQUEST_CONTROLLER,


替換：

    REMOVE_NPC,
    SPAWN_NPC_REQUEST_CONTROLLER,
    NPC_SET_SPECIAL_ACTION,
    NPC_UPDATE_LIMITED_INFO,


搜索：

        public static byte[] getDirectionInfo(String data, int value, int x, int y, int pro) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.DIRECTION_INFO.getValue());
            mplew.write(2);
            mplew.writeMapleAsciiString(data);
            mplew.writeInt(value);
            mplew.writeInt(x);
            mplew.writeInt(y);
            mplew.writeShort(pro);
            mplew.writeInt(0); //only if pro is > 0

            return mplew.getPacket();
        }

替換：

        public static byte[] getDirectionInfo(String data, int value, int x, int y, int pro) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.DIRECTION_INFO.getValue());
            mplew.write(2);
            mplew.writeMapleAsciiString(data);
            mplew.writeInt(value);
            mplew.writeInt(x);
            mplew.writeInt(y);
            mplew.writeShort(pro);
            mplew.writeInt(0); //only if pro is > 0

            return mplew.getPacket();
        }

        public static byte[] getDirectionEffect(String data, int value, int x, int y, int z) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.DIRECTION_INFO.getValue());
            mplew.write(2);
            mplew.writeMapleAsciiString(data);
            mplew.writeInt(value);
            mplew.writeInt(x);
            mplew.writeInt(y);
            mplew.write(1);
            mplew.writeInt(0);
            mplew.write(1);
            mplew.writeInt(z);
            mplew.write(z == 0 ? 1 : 0);
            mplew.write(0);

            return mplew.getPacket();
        }



sendops包標頭檔添加

#NPC移動
NPC_UPDATE_LIMITED_INFO = 0x1B4

#NPC動作
NPC_SET_SPECIAL_ACTION = 0x1B5