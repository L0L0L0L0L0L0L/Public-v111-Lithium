    EMPTY_1(0x20, 2, !GameConstants.GMS), //chaos
    EMPTY_2(0x40, 2, true),
    EMPTY_3(0x80, 2, true),
    EMPTY_4(0x100, 2, GameConstants.GMS), //jump
    EMPTY_5(0x200, 2, GameConstants.GMS),
    EMPTY_6(0x400, 2, GameConstants.GMS),


import java.util.HashSet;
import java.util.Set;





    public static byte[] spawnMonster(MapleMonster life, int spawnType, int link) {
        MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

        mplew.writeShort(SendPacketOpcode.SPAWN_MONSTER.getValue());
        mplew.writeInt(life.getObjectId());
        mplew.write(1); // 1 = Control normal, 5 = Control none
        mplew.writeInt(life.getId());
        addMonsterStatus(mplew, life);

        return mplew.getPacket();
    }


    public static void addMonsterInformation(MaplePacketLittleEndianWriter mplew, MapleMonster life, boolean newSpawn, boolean summon, byte spawnType, int link) {
        mplew.writePos(life.getTruePosition());
        mplew.write(life.getStance());
        mplew.writeShort(0);
        mplew.writeShort(life.getFh());
        if (summon) {
            mplew.write(spawnType);
            if ((spawnType == -3) || (spawnType >= 0)) {
                mplew.writeInt(link);
            }
        } else {
            mplew.write(newSpawn ? -2 : life.isFake() ? -4 : -1);
        }
        mplew.write(life.getCarnivalTeam());
        mplew.writeInt(0);
        mplew.writeInt(0);
        mplew.write(-1);

        }
    }


    private static void writeBuffMask(MaplePacketLittleEndianWriter mplew, Collection<MonsterStatusEffect> ss) {
        int[] mask = new int[GameConstants.MAX_BUFFSTAT];
        for (MonsterStatusEffect statup : ss) {
            mask[(statup.getStati().getPosition() - 1)] |= statup.getStati().getValue();
        }
        for (int i = mask.length; i >= 1; i--) {
            mplew.writeInt(mask[(i - 1)]);
        }
    }

    public static void EncodeTemporary(MaplePacketLittleEndianWriter mplew, MapleMonster life, Collection<MonsterStatusEffect> buffs) {
        if (life.getStati().size() <= 0) {
            life.addEmpty();
        }
        mplew.write(life.getChangedStats() != null ? 1 : 0);
        Set<MonsterStatus> mobstat = new HashSet();
        writeBuffMask(mplew, buffs);

        for (MonsterStatusEffect buff : buffs) {
            mobstat.add(buff.getStati());
            if ((buff.getStati() != MonsterStatus.EMPTY) && (buff.getStati() != MonsterStatus.SUMMON)) {
                mplew.writeShort(buff.getX());
                if (buff.getMobSkill() != null) {
                    mplew.writeShort(buff.getMobSkill().getSkillId());
                    mplew.writeShort(buff.getMobSkill().getSkillLevel());
                } else {
                    mplew.writeInt(buff.getSkill() > 0 ? buff.getSkill() : 0);
                }
                mplew.writeShort((short) ((buff.getCancelTask() - System.currentTimeMillis()) / 1000));
            }
        }

        if (mobstat.contains(MonsterStatus.EMPTY)) {
            int a7 = 0;
            mplew.write(a7);
            if (a7 > 0) {
                for (int i = 0; i < a7; i++) {
                    mplew.writeInt(a7);
                    mplew.writeInt(a7);
                    mplew.writeInt(a7);
                    mplew.writeInt(a7);
                    mplew.writeInt(a7);
                    mplew.writeInt(a7);
                }

            }

        }
        if (mobstat.contains(MonsterStatus.WEAPON_DAMAGE_REFLECT)) {
            mplew.writeInt(0);
        }
        if (mobstat.contains(MonsterStatus.MAGIC_DAMAGE_REFLECT)) {
            mplew.writeInt(0);
        }
        if ((mobstat.contains(MonsterStatus.WEAPON_DAMAGE_REFLECT)) || (mobstat.contains(MonsterStatus.MAGIC_DAMAGE_REFLECT))) {
            mplew.writeInt(0);
            mplew.writeInt(0);
        }

        if (mobstat.contains(MonsterStatus.SUMMON)) {
            int v47 = 0;
            mplew.write(v47);
            mplew.write(v47);
        }
    }


    public static byte[] controlMonster(MapleMonster life, boolean newSpawn, boolean aggro) {
        MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

        mplew.writeShort(SendPacketOpcode.SPAWN_MONSTER_CONTROL.getValue());
        mplew.write(aggro ? 2 : 1);
        mplew.writeInt(life.getObjectId());
        mplew.write(1); // 1 = Control normal, 5 = Control none
        mplew.writeInt(life.getId());
        Collection<MonsterStatusEffect> buffs = life.getStati().values();
        EncodeTemporary(mplew, life, buffs);
        addMonsterInformation(mplew, life, newSpawn, false, (byte) (life.isFake() ? 1 : 0), 0);

        return mplew.getPacket();
    }