搜索：

        public static byte[] newGuildMember(MapleGuildCharacter mgc) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.GUILD_OPERATION.getValue());
            mplew.write(45);
            mplew.writeInt(mgc.getGuildId());
            mplew.writeInt(mgc.getId());
            
            //mplew.writeAsciiString(mgc.getName(), 13);
            mplew.writeAsciiString(StringUtil.getRightPaddedStr(mgc.getName(), '\0', 13)); // 支持家族中文
            
            mplew.writeInt(mgc.getJobId());
            mplew.writeInt(mgc.getLevel());
            mplew.writeInt(mgc.getGuildRank()); //should be always 5 but whatevs
            mplew.writeInt(mgc.isOnline() ? 1 : 0); //should always be 1 too
            mplew.writeInt(mgc.getAllianceRank()); //? could be guild signature, but doesn't seem to matter
            mplew.writeInt(mgc.getGuildContribution()); //should always 3

            return mplew.getPacket();
        }

        public static byte[] memberLeft(MapleGuildCharacter mgc, boolean bExpelled) {
            MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();

            mplew.writeShort(SendPacketOpcode.GUILD_OPERATION.getValue());
            mplew.write(bExpelled ? 53 : 50);
            mplew.writeInt(mgc.getGuildId());
            mplew.writeInt(mgc.getId());
            //mplew.writeMapleAsciiString(mgc.getName());
            mplew.writeAsciiString(StringUtil.getRightPaddedStr(mgc.getName(), '\0', 13));// 支援公會中文

            return mplew.getPacket();
        }








搜索：

    public static final String getLeftPaddedStr(final String in, final char padchar, final int length) {
        StringBuilder builder = new StringBuilder(length);
        for (int x = in.length(); x < length; x++) {
            builder.append(padchar);
        }
        builder.append(in);
        return builder.toString();
    }

替換：

    public static final String getLeftPaddedStr(final String in, final char padchar, final int length) {
        StringBuilder builder = new StringBuilder(length);
        for (int x = getlength(in); x < length; x++) {//支援中文
            builder.append(padchar);
        }
        builder.append(in);
        return builder.toString();
    }