		ms.getDirectionInfoNew(0,100,100,100);//画面移动
		ms.getDirectionInfo(1,1542);
	} else if (status == 3) {
		ms.getDirectionInfo(1,8542);
	} else if (status == 4) {
		ms.getDirectionInfoNew(1,0);//返回原画面




    public void getDirectionInfoNew(final byte paramByte, final int paramInt1, final int paramInt2, final int paramInt3) {
        this.c.getSession().write(UIPacket.getDirectionInfoNew(paramByte, paramInt1, paramInt2, paramInt3));
    }
    
    public void getDirectionInfoNew(final byte paramByte, final int paramInt) {
        this.c.getSession().write(UIPacket.getDirectionInfoNew(paramByte, paramInt));
    }




    public static byte[] getDirectionInfoNew(final byte type, final int value) {
        UIPacket.log.trace((Object)"调用");
        final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
        mplew.writeShort(SendPacketOpcode.DIRECTION_INFO.getValue());
        mplew.write(5);
        mplew.writeShort(type);
        mplew.writeInt(value);
        return mplew.getPacket();
    }
    
    public static byte[] getDirectionInfoNew(final byte type, final int x, final int y, final int z) {
        UIPacket.log.trace((Object)"调用");
        final MaplePacketLittleEndianWriter mplew = new MaplePacketLittleEndianWriter();
        mplew.writeShort(SendPacketOpcode.DIRECTION_INFO.getValue());
        mplew.write(5);
        mplew.writeShort(type);
        mplew.writeInt(x);
        mplew.writeInt(y);
        mplew.writeInt(z);
        return mplew.getPacket();
    }