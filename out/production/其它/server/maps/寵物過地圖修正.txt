搜索：

    @Override
    public void sendSpawnData(MapleClient client) {
        if (client.getPlayer().allowedToTarget(this)) {
            client.getSession().write(EtcPacket.spawnPlayerMapobject(this));

            for (final MaplePet pet : pets) {
                if (pet.getSummoned()) {
                    client.getSession().write(PetPacket.showPet(this, pet, false, false));
                }
            }

替換：

    @Override
    public void sendSpawnData(MapleClient client) {
        if (client.getPlayer().allowedToTarget(this)) {
            client.getSession().write(EtcPacket.spawnPlayerMapobject(this));




搜索：

        player.setPetAutoHP(player.getPetAutoHP());     
        player.setPetAutoMP(player.getPetAutoMP());   
        player.saveToDB(true,true);  
    }


替換：

        player.setPetAutoHP(player.getPetAutoHP());
        player.setPetAutoMP(player.getPetAutoMP());
        for (final MaplePet pet : player.getPets()) {
            if (pet.getSummoned()) {
               player.getClient().getSession().write(PetPacket.showPet(player, pet, false, false));
            }
        }
        player.saveToDB(true,true);  
    }

頁首添加：

import client.inventory.MaplePet;


import tools.packet.PetPacket;


搜索：

        for (final MaplePet pet : chr.getPets()) {
            if (pet.getSummoned()) {
                broadcastMessage(chr, PetPacket.showPet(chr, pet, false, false), false);
            }
        }


替換：

        for (final MaplePet pet : chr.getPets()) {
            if (pet.getSummoned()) {
                pet.setPos(chr.getTruePosition());//過地圖寵物座標
                chr.getClient().getSession().write(PetPacket.showPet(chr, pet, false, false)); 
            }
        }
