搜索：

    private long lastCombo, lastfametime, keydown_skill, nextConsume, pqStartTime, lastDragonBloodTime,
            lastBerserkTime, lastRecoveryTime, lastSummonTime, mapChangeTime, lastFishingTime, lastFairyTime,
            lastHPTime, lastMPTime, lastFamiliarEffectTime, lastDOTTime;

替換：

    private long lastCombo, lastfametime, keydown_skill, nextConsume, pqStartTime, lastDragonBloodTime,
            lastBerserkTime, lastRecoveryTime, lastSummonTime, mapChangeTime, lastFishingTime, lastFairyTime,
            lastHPTime, lastMPTime, lastFamiliarEffectTime, lastDOTTime, lastExpirationTime;


搜索：

            lastHPTime = 0;
            lastMPTime = 0;
            lastFamiliarEffectTime = 0;

替換：

            lastHPTime = 0;
            lastMPTime = 0;
            lastFamiliarEffectTime = 0;
            lastExpirationTime = 0;



搜索：

        Item item;
        for (final Triple<MapleInventoryType, Item, Boolean> itemz : toberemove) {
            item = itemz.getMid();
            getInventory(itemz.getLeft()).removeItem(item.getPosition(), item.getQuantity(), false);


替換：

        Item item;
        for (final Triple<MapleInventoryType, Item, Boolean> itemz : toberemove) {
            item = itemz.getMid();
            MapleInventoryManipulator.removeFromSlot(this.client, (MapleInventoryType) itemz.getLeft(), item.getPosition(), item.getQuantity(), false);
            getInventory(itemz.getLeft()).removeItem(item.getPosition(), item.getQuantity(), false);
            stats.recalcLocalStats(this);


搜索：

        this.pendingSkills = skilz;
        if (stat != null && stat.getCustomData() != null && Long.parseLong(stat.getCustomData()) < currenttime) { //expired bro
            quests.remove(MapleQuest.getInstance(7830));
            quests.remove(MapleQuest.getInstance(GameConstants.PENDANT_SLOT));
        }
    }


替換：

        this.pendingSkills = skilz;
        if (stat != null && stat.getCustomData() != null && Long.parseLong(stat.getCustomData()) < currenttime) { //expired bro
            quests.remove(MapleQuest.getInstance(7830));
            quests.remove(MapleQuest.getInstance(GameConstants.PENDANT_SLOT));
        }
       lastExpirationTime = System.currentTimeMillis();
    }

    public boolean canExpiration(long now) {
        return (lastExpirationTime > 0) && (lastExpirationTime + 60000 < now);
    }


搜索：

			if (chr.canDOT(now)) {
				chr.doDOT();
			}
        }


替換：

            if (chr.canDOT(now)) {
                chr.doDOT();
            }
            if (chr.canExpiration(now)) {
                chr.expirationTask(false, false);
                chr.expirationTask(true, false);
            }
        }